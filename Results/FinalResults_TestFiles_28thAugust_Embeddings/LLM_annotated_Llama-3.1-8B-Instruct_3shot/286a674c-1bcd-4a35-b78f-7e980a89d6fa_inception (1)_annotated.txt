### Code ###
```python
import json
import re

def extract_entities(text):
    entities = {
        "Crops": [],
        "Soil": [],
        "Location": [],
        "Time Statement": []
    }

    # Crops
    crops = ["winter wheat"]
    for crop in crops:
        match = re.search(r'\b' + re.escape(crop) + r'\b', text)
        if match:
            entities["Crops"].append({
                "cropSpecies": {
                    "value": crop,
                    "span": [match.start(), match.end()]
                }
            })

    # Soil
    # (No explicit mentions of soil types in the text)

    # Location
    locations = [
        "Germany",
        "Brandenburg",
        "Uckermark",
        "Quillow"
    ]
    for location in locations:
        match = re.search(r'\b' + re.escape(location) + r'\b', text)
        if match:
            if location == "Germany":
                entities["Location"].append({
                    "country": {
                        "value": location,
                        "span": [match.start(), match.end()]
                    }
                })
            elif location == "Brandenburg":
                entities["Location"].append({
                    "region": {
                        "value": location,
                        "span": [match.start(), match.end()]
                    }
                })
            else:
                entities["Location"].append({
                    "city": {
                        "value": location,
                        "span": [match.start(), match.end()]
                    }
                })

    # Time Statement
    time_statements = [
        "April",
        "June",
        "2019"
    ]
    for time_statement in time_statements:
        match = re.search(r'\b' + re.escape(time_statement) + r'\b', text)
        if match:
            if time_statement == "April":
                entities["Time Statement"].append({
                    "startTime": {
                        "value": time_statement,
                        "span": [match.start(), match.end()]
                    }
                })
            elif time_statement == "June":
                entities["Time Statement"].append({
                    "endTime": {
                        "value": time_statement,
                        "span": [match.start(), match.end()]
                    }
                })
            else:
                entities["Time Statement"].append({
                    "startTime": {
                        "value": time_statement,
                        "span": [match.start(), match.end()]
                    }
                })

    return entities

text = """
Microclimatic data along a gradient from kettle holes to agricultural fields in the AgroScapeLabs Quillow 2019
Microclimatic data along a gradient from kettle holes to agricultural fields in the AgroScapeLabs Quillow 2019.
Ten kettle holes within six agricultural fields (crop: winter wheat) were selected for monitoring microclimatic conditions around the kettle holes. For this purpose we have established a transect starting from the edge of the kettle holes up to 50 m into the surrounding wheat fields. As a control, transects were established from the field edge into the wheat field. Along these transects microclimatic observation stations were installed at 5 different distances (-1m; 1m; 5m; 20m; 50m). At each point air temperature and air humidity were monitored during the growing season of wheat plants (between April and June 2019) Research domain: Ecology of Agricultural Landscapes
climatic factors, environmental factors, measurement, production location, climate system, ecosystems, opendata, Boden, Bewirtschaftungsgebiete/Schutzgebiete/geregelte Gebiete und Berichterstattungseinheiten, Lebensr√§ume und Biotope, Meteorologisch-geografische Kennwerte, Germany, Brandenburg, Uckermark, Quillow
"""

entities = extract_entities(text)
print(json.dumps(entities, indent=4))
```

### Output ###
```json
{
    "Crops": [
        {
            "cropSpecies": {
                "value": "winter wheat",
                "span": [141, 153]
            }
        }
    ],
    "Soil": [],
    "Location": [
        {
            "country": {
                "value": "Germany",
                "span": [509, 516]
            }
        },
        {
            "region": {
                "value": "Brandenburg",
                "span": [521, 530]
            }
        },
        {
            "city": {
                "value": "Uckermark",
                "span": [533, 542]
            }
        },
        {
            "city": {
                "value": "Quillow",
                "span": [544, 552]
            }
        }
    ],
    "Time Statement": [
        {
            "startTime": {
                "value": "April",
                "span": [220, 225]
            }
        },
        {
            "endTime": {
                "value": "June",
                "span": [232, 237]
            }
        },
        {
            "startTime": {
                "value": "2019",
                "span": [242, 247]
            }
        }
    ]
}
```