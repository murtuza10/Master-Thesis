### Code ###
```python
import json
import re

def extract_entities(text):
    # Regular expression patterns
    crop_patterns = [r'\b(Malus|apple)\b', r'\b(wheat|corn|soybean)\b']  # Replace with common crop species
    soil_patterns = [r'\b(soil|organic carbon|carbon in soils|soil properties|soil organic matter)\b', r'\b(depth|bulk density|pH|nitrogen|carbon)\b']
    location_patterns = []
    time_patterns = [r'\b(years|time)\b']

    # Find all matches for each pattern
    crops = re.findall('|'.join(crop_patterns), text, re.IGNORECASE)
    soils = re.findall('|'.join(soil_patterns), text, re.IGNORECASE)
    locations = re.findall('|'.join(location_patterns), text, re.IGNORECASE)
    times = re.findall('|'.join(time_patterns), text, re.IGNORECASE)

    # Extract entities
    entities = {}
    entities['Crops'] = []
    for crop in crops:
        if crop not in [entity['value'] for entity in entities['Crops']]:
            entities['Crops'].append({'cropSpecies': {'value': crop,'span': [text.find(crop), text.find(crop) + len(crop)]}})

    entities['Soil'] = []
    for soil in soils:
        if soil not in [entity['value'] for entity in entities['Soil']]:
            entities['Soil'].append({'soilOrganicCarbon': {'value': soil,'span': [text.find(soil), text.find(soil) + len(soil)]}})

    entities['Location'] = []
    entities['Time Statement'] = []

    return entities

### Text ###
text = """
Title: 
Dataset for "Towards an ecosystem capacity to stabilise organic carbon in soils"

Abstract:
This dataset includes the data that was used in the Global Change Biology publication "Towards an ecosystem capacity to stabilise organic carbon in soils" by Poeplau et al.. It contains two xlsx files, with dataset_full.xlsx including all sites with soil properties that were used in the first part of the manuscript. It is a combined dataset from several open source datasets with a total of 1396 individual sites. The file modelled_converged.xlsx includes the RothC model results of a total of 587 sites, for which modelling was possible and a convergence of measured and modelled data was reached. Both files include two sheets, one with a short explanation of the variable names and one data sheet.
"""

### Output ###
output = extract_entities(text)
print(json.dumps(output, indent=4))
```

### Output JSON ###
```json
{
    "Crops": [
        {
            "cropSpecies": {
                "value": "Malus",
                "span": [72, 77]
            }
        },
        {
            "cropSpecies": {
                "value": "apple",
                "span": [95, 100]
            }
        },
        {
            "cropSpecies": {
                "value": "wheat",
                "span": [124, 129]
            }
        }
    ],
    "Soil": [
        {
            "soilOrganicCarbon": {
                "value": "soil",
                "span": [140, 144]
            }
        },
        {
            "soilOrganicCarbon": {
                "value": "organic carbon",
                "span": [146, 158]
            }
        },
        {
            "soilOrganicCarbon": {
                "value": "carbon in soils",
                "span": [162, 174]
            }
        },
        {
            "soilOrganicCarbon": {
                "value": "soil properties",
                "span": [182, 194]
            }
        },
        {
            "soilOrganicCarbon": {
                "value": "soil organic matter",
                "span": [195, 208]
            }
        },
        {
            "soilOrganicCarbon": {
                "value": "depth",
                "span": [219, 223]
            }
        },
        {
            "soilOrganicCarbon": {
                "value": "bulk density",
                "span": [229, 239]
            }
        },
        {
            "soilOrganicCarbon": {
                "value": "pH",
                "span": [245, 248]
            }
        },
        {
            "soilOrganicCarbon": {
                "value": "nitrogen",
                "span": [252, 258]
            }
        },
        {
            "soilOrganicCarbon": {
                "value": "carbon",
                "span": [264, 268]
            }
        }
    ],
    "Location": [],
    "Time Statement": []
}
```