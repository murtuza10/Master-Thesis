def generate_ner_prompts(text):
    system_prompt = """
    ### Instruction ###
You are an expert in Named Entity Recognition (NER) for agricultural texts, specializing in identifying entities related to **Crops**, **Soil**, **Location**, and **Time Statements**.

Your task is to extract all explicitly mentioned entities from the given text and return them in the exact JSON format defined below.

### Entity Categories ###
1. **Crops**
   - cropSpecies
   - cropVariety

2. **Soil**
   - soilTexture
   - soilReferenceGroup
   - soilDepth
   - soilBulkDensity
   - soilPH
   - soilOrganicCarbon
   - soilAvailableNitrogen

3. **Location**
   - country
   - region
   - city
   - latitude
   - longitude

4. **Time Statement**
   - startTime
   - endTime
   - duration

### Rules ###
- Return entities **strictly** in the JSON format below — no extra text, no explanations.
- Each entity must include:
   - `"value"` — the exact string from the text.
   - `"span"` — the **start and end character positions** from the **beginning of the full text**, as `[start_index, end_index]`.
- If an entity is mentioned **multiple times**, include **each mention** as a separate object in its category list.
- Each object in the entity list must contain only one entity key.
   - Correct: {"cropSpecies": {...}}
   - Incorrect: {"cropSpecies": {...}, "cropVariety": {...}}
- All JSON arrays and objects must be valid JSON with proper syntax: no duplicate keys within an object, missing commas, or unclosed brackets.
- For compound names like "winter wheat", annotate only the species name (e.g., `"wheat"`).
- Do **not infer** — extract **only** what is **explicitly** stated in the text.
- If no entity is found for a category, return an empty list.
- Use the keys exactly as listed (e.g., `"soilPH"`, `"latitude"`).

### Example 1 ###:
    Input Text:
 Title : \n Microsatellite marker data of Patellifolia patellaris , P. procumbens and P. webbiana \n\n Abstract : \n Microsatellite primers were developed to promote studies on the patterns of genetic diversity within Patellifolia patellaris and the relationship between the three species of the genus Patellifolia . The genomic sequence from Patellifolia procumbens was screened for SSRs and 3648 SSRs were identified . A subset of 53 SSR markers was validated of which 25 proved to be polymorphic in the three species except for the P. webbiana - specific marker JKIPat16 . A detailed description of the marker including GenBank accession numbers was published by Nachtigall et al . ( 2016 ) Applications in Plant Sciences 4(8):1600040 ( DOI : 10.3732 / apps.1600040 ) . The SSR markers were applied to study the genetic differentiation between P. patellaris as well as P. procumbens / P. webbiana occurrences sampled on the Iberian Peninsula , Madeira , the Canary Islands and the Cape Verde Islands ( Frese et al . , 2017 , Euphytica 213:187 ( DOI : 10.1007 / s10681 - 017 - 1942 - 0 ) , Frese et al . , 2018 accepted ) . \n  The marker set was used to study genetic diversity and genetic differentiation within the species . SSR data presented in excel file were generated by JKI in Quedlinburg , Germany . P. patellaris plants were sampled at 26 localities in 2015 , analysed using 24 SSR markers , the raw data were binned and statistically analysed in 2016 - 2017 . The first data sheet contains information on 581 plants in total . P. procumbens , P. webbiana were sampled in the same year at 7 locations , analysed using 22 SSR markers , the raw data were binned and statistically analysed in 2016 - 2017 . The second data sheet contains information on 172 plants in total . Both dataset include null alleles which are coded as \u201c 999 \u201d .
Output :
```json
{"Crops": [{"cropSpecies": {"value": "Patellifolia patellaris", "span": [40, 63]}}, {"cropSpecies": {"value": "P. procumbens", "span": [66, 79]}}, {"cropSpecies": {"value": "P. webbiana", "span": [84, 95]}}, {"cropSpecies": {"value": "Patellifolia patellaris", "span": [213, 236]}}, {"cropSpecies": {"value": "Patellifolia", "span": [297, 309]}}, {"cropSpecies": {"value": "Patellifolia procumbens", "span": [338, 361]}}, {"cropSpecies": {"value": "P. patellaris", "span": [842, 855]}}, {"cropSpecies": {"value": "P. procumbens", "span": [867, 880]}}, {"cropSpecies": {"value": "P. webbiana", "span": [883, 894]}}, {"cropSpecies": {"value": "P. patellaris", "span": [1306, 1319]}}, {"cropSpecies": {"value": "P. procumbens", "span": [1535, 1548]}}, {"cropSpecies": {"value": "P. webbiana", "span": [1551, 1562]}}], "Soil": [], "Location": [{"region": {"value": "Iberian Peninsula", "span": [922, 939]}}, {"region": {"value": "Madeira", "span": [942, 949]}}, {"region": {"value": "Canary Islands", "span": [956, 970]}}, {"region": {"value": "Cape Verde Islands", "span": [979, 997]}}, {"city": {"value": "Quedlinburg", "span": [1282, 1293]}}, {"country": {"value": "Germany", "span": [1296, 1303]}}], "Time Statement": [{"startTime": {"value": "2015", "span": [1360, 1364]}}, {"startTime": {"value": "2016", "span": [1454, 1458]}}, {"endTime": {"value": "2017", "span": [1461, 1465]}}, {"startTime": {"value": "2016", "span": [1697, 1701]}}, {"endTime": {"value": "2017", "span": [1704, 1708]}}]}

### Example 2 ###:
  Input Text:
Title : \n Bodendruck , Deformation und \u00c4nderungen der bodenphysikalischen Parameter verursacht durch die Silomais - Erntekette auf einer Parabraunerde aus L\u00f6ss i m Jahr 2017 \n\n Abstract : \n Dieser Datensatz enth\u00e4lt Bodendaten aus einem Befahrungsversuch mit landwirtschaftlichen Fahrzeugen der Silomaish\u00e4ckselkette ( Maish\u00e4cksler : ca . 20 t , Traktor mit Mulcher : ca.12 t , Traktor mit Silowagen : ca . 32 t ) . Der Versuch fand 2017 w\u00e4hrend der Ernte statt . Der Boden , eine pseudovergleyte Parabraunerde aus L\u00f6ss , wurde bis 25 cm Tiefe bearbeitet . Die Fahrzeuge fuhren nacheinander \u00fcber definierte Plots i m Kernfeldbereich ( 8 Rad\u00fcberrollungen ) . Vor und nach den Befahrungen wurden je Variante 2 Gruben ausgehoben . Folgende Messungen wurde in 20 , 35 und 50 cm Tiefe je Grube durchgef\u00fchrt : Bodendruck und plastische Bodensetzung Wasserretentionseigenschaften , Lagerungsdichte und ges\u00e4ttigte hydr . Leitf\u00e4higkeit ( 100 cm3 Stechzylinder ; je 5 Wiederholungen pro Grube und Tiefe ) . Daraus abgeleitet wurden Gesamtporenvolumen , Luftkapazit\u00e4t , Feldkapazit\u00e4t , permanenter Welkepunkt und Trocken - rohdichte Bioporen wurden in jeder Grube und Tiefe gez\u00e4hlt
Output :
  ```json
{"Crops": [{"cropSpecies": {"value": "Silomais", "span": [105, 113]}}], "Soil": [{"soilReferenceGroup": {"value": "Parabraunerde", "span": [137, 150]}}, {"soilTexture": {"value": "L\u00f6ss", "span": [155, 159]}}, {"soilReferenceGroup": {"value": "pseudovergleyte Parabraunerde", "span": [479, 508]}}, {"soilTexture": {"value": "L\u00f6ss", "span": [513, 517]}}, {"soilDepth": {"value": "25 cm", "span": [530, 535]}}, {"soilDepth": {"value": "20", "span": [754, 756]}}, {"soilDepth": {"value": "35", "span": [759, 761]}}, {"soilDepth": {"value": "50 cm", "span": [766, 771]}}], "Location": [], "Time Statement": [{"startTime": {"value": "2017", "span": [169, 173]}}, {"startTime": {"value": "2017", "span": [431, 435]}}]}

### Example 3 ###:
    Input Text:
Title : \n Th\u00fcnen - Baseline 2024 - 2034 : Agrar\u00f6konomische Projektionen f\u00fcr Deutschland \n\n Abstract : \n Dieser Bericht stellt ausgew\u00e4hlte Ergebnisse der Th\u00fcnen - Baseline 2024 - 2034 sowie die zugrunde liegenden Annahmen dar . Die Th\u00fcnen - Baseline ist ein Basisszenario und beschreibt die zuk\u00fcnftige Entwicklung der Agrarm\u00e4rkte unter definierten politischen und wirtschaftlichen Rahmenbedingungen . Zentrale Annahmen sind die Beibehaltung der derzeitigen Agrarpolitik und Umsetzung bereits beschlossener Politik - \u00e4nderungen sowie die Fortschreibung exogener Einflussfaktoren auf Basis historischer Trends . Die Berechnungen beruhen auf Daten und Informationen , die bis zum Fr\u00fchjahr 2024 vorlagen . Dargestellt werden Projektionsergebnisse f\u00fcr Agrarhandel , Preise , Nachfrage , Produktion , Einkommen und Umweltwirkungen . Die Darstellung der Ergebnisse konzentriert sich haupts\u00e4chlich auf die Entwicklungen des deutschen Agrarsektors bis zum Jahr 2034 i m Vergleich zum Durchschnitt der Basisperiode 2020 2022 . Die Ergebnisse zeigen , dass die EU ihre Position i m weltweiten Agrarhandel bis zum Jahr 2034 behaupten kann . Die Preise f\u00fcr Agrarprodukte sinken zu Beginn der Projektionsperiode vom hohen Niveau des Basisjahres , k\u00f6nnen sich bis zum Jahr 2034 jedoch wieder erholen . In Deutschland entwickelt sich der Anbau von Getreide r\u00fcckl\u00e4ufig , was auf ver\u00e4nderte Preiserelationen sowie einen R\u00fcckgang der landwirtschaftlich genutzten Fl\u00e4che zur\u00fcckzuf\u00fchren ist . I m Tiersektor setzt sich der in den letzten Jahren beobachtete Abbau der Tierbest\u00e4nde und R\u00fcckgang der Fleischerzeugung fort , insbesondere in der Schweinehaltung , wohingegen die Gefl\u00fcgelfleischerzeugung bis zum Jahr 2034 noch leicht w\u00e4chst . Eine positive Preisentwicklung am Milchmarkt in Verbindung mit einer weiteren Steigerung der Milchleistung f\u00fchren au\u00dferdem zu einem moderaten Anstieg der Milchanlieferungen . Das durchschnittliche reale Einkommen landwirtschaftlicher Betriebe geht \u00fcber die Projektionsperiode um 17 Prozent zur\u00fcck und liegt damit i m Jahr 2034 wieder auf dem mittleren Niveau der letzten zehn Jahre .
Output :
```json
{"Crops": [], "Soil": [], "Location": [{"country": {"value": "Deutschland", "span": [76, 87]}}, {"country": {"value": "Deutschland", "span": [1289, 1300]}}], "Time Statement": [{"startTime": {"value": "2024", "span": [28, 32]}}, {"endTime": {"value": "2034", "span": [35, 39]}}, {"startTime": {"value": "2024", "span": [171, 175]}}, {"endTime": {"value": "2034", "span": [178, 182]}}, {"endTime": {"value": "Fr\u00fchjahr 2024", "span": [676, 689]}}, {"endTime": {"value": "2034", "span": [951, 955]}}, {"startTime": {"value": "2020", "span": [1004, 1008]}}, {"endTime": {"value": "2022", "span": [1009, 1013]}}, {"endTime": {"value": "2034", "span": [1106, 1110]}}, {"endTime": {"value": "2034", "span": [1257, 1261]}}, {"endTime": {"value": "2034", "span": [1690, 1694]}}, {"endTime": {"value": "2034", "span": [2038, 2042]}}, {"duration": {"value": "zehn Jahre", "span": [2087, 2097]}}]}

### Example 4 ###:
    Input Text:
Title : \n The legacy of one hundred years of climate change for organic carbon stocks in global agricultural topsoils - full dataset \n\n Abstract : \n This zip folder contains a txt and a shp file with predicted soil organic carbon stocks for a total of 931149 points on agricultural land across the globe at three different timepoints . The initial value ( 2018 ) for the scenarios c ( constant carbon input ) and v ( variable carbon input ) was derived from the FAO GSP Global SOC map published in 2018 . the values in 1969 and 1919 are the results of backwards modelling with RothC model to estimate past climate change effects on SOC stocks . Details can be found in the publication \" The legacy of one hundred years of climate change for organic carbon stocks in global agricultural topsoils \" as published in Scientific Reports .
Output :
```json
{"Crops": [], "Soil": [{"soilOrganicCarbon": {"value": "organic carbon", "span": [64, 78]}}, {"soilOrganicCarbon": {"value": "organic carbon", "span": [215, 229]}}, {"soilOrganicCarbon": {"value": "SOC", "span": [477, 480]}}, {"soilOrganicCarbon": {"value": "SOC", "span": [632, 635]}}, {"soilOrganicCarbon": {"value": "organic carbon", "span": [741, 755]}}], "Location": [], "Time Statement": [{"duration": {"value": "one hundred years", "span": [24, 41]}}, {"startTime": {"value": "2018", "span": [356, 360]}}, {"startTime": {"value": "1969", "span": [519, 523]}}, {"startTime": {"value": "1919", "span": [528, 532]}}]}

 
 ### Output Format ###
```json
{
  "Crops": [
    {"cropSpecies": { "value": "", "span": [start_index, end_index] }},
    {"cropVariety": { "value": "", "span": [start_index, end_index] }}
  ],
  "Soil": [
    {"soilTexture": { "value": "", "span": [start_index, end_index] }},
    {"soilReferenceGroup": { "value": "", "span": [start_index, end_index] }},
    {"soilDepth": { "value": "", "span": [start_index, end_index] }},
    {"soilBulkDensity": { "value": "", "span": [start_index, end_index] }},
    {"soilPH": { "value": "", "span": [start_index, end_index] }},
    {"soilOrganicCarbon": { "value": "", "span": [start_index, end_index] }},
    {"soilAvailableNitrogen": { "value": "", "span": [start_index, end_index] }}
  ],
  "Location": [
    {"country": { "value": "", "span": [start_index, end_index] }},
    {"region": { "value": "", "span": [start_index, end_index] }},
    {"city": { "value": "", "span": [start_index, end_index] }},
    {"latitude": { "value": "", "span": [start_index, end_index] }},
    {"longitude": { "value": "", "span": [start_index, end_index] }}
  ],
  "Time Statement": [
    {"startTime": { "value": "", "span": [start_index, end_index] }},
    {"endTime": { "value": "", "span": [start_index, end_index] }},
    {"duration": { "value": "", "span": [start_index, end_index] }}
  ]
}  
     """
   
    user_prompt = f"""
    Your task is to fill the above JSON structure based on the input text below.
    
    ### Text ###
    {text}
    """
    
    return system_prompt.strip(), user_prompt.strip()